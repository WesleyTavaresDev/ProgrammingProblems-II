<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a5be6784-2b2d-40b8-9657-784b348e8551" name="Changes" comment="Packages naming refactoring">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/element/largest/LargestElement.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/element/largest/LargestElement.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="24Z61J4nHXeOYTkqr6jYxh5ZhdK" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SONARLINT_PRECOMMIT_ANALYSIS" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
  </component>
  <component name="RunManager" selected="Application.LargestElement (1)">
    <configuration name="ElementOccurrenceChecker" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="ElementOccurrenceCheckerProblem.ElementOccurrenceChecker" />
      <module name="ProgrammingProblems-II" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="ElementOccurrenceCheckerProblem.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LargestElement (1)" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.element.largest.LargestElement" />
      <module name="ProgrammingProblems-II" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.element.largest.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OddPositions" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="OddPositionsProblem.OddPositions" />
      <module name="ProgrammingProblems-II" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="OddPositionsProblem.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Palindrome" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="PalindromeProblem.Palindrome" />
      <module name="ProgrammingProblems-II" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="PalindromeProblem.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SumOfListElements" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="SumOfListProblem.SumOfListElements" />
      <module name="ProgrammingProblems-II" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="SumOfListProblem.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.LargestElement (1)" />
        <item itemvalue="Application.Palindrome" />
        <item itemvalue="Application.SumOfListElements" />
        <item itemvalue="Application.OddPositions" />
        <item itemvalue="Application.ElementOccurrenceChecker" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a5be6784-2b2d-40b8-9657-784b348e8551" name="Changes" comment="" />
      <created>1643825546773</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1643825546773</updated>
      <workItem from="1644310745988" duration="1594000" />
    </task>
    <task id="LOCAL-00001" summary="PROBLEM:&#10;*&#10;1.Write a function that returns the largest element in a list.*&#10;&#10;Extract function on stream code part.&#10;&#10;Reason: For people who don't know about stream, putting it in a function and give a descriptive name can help">
      <created>1643842541227</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1643842541228</updated>
    </task>
    <task id="LOCAL-00002" summary="PROBLEM:&#10;*&#10;1.Write a function that returns the largest element in a list.*&#10;&#10;Inline variable (Inline Temp)&#10;&#10;Reason: There's no reason to use a variable to hold my largestNumber if I can return this value directly to print in my console">
      <created>1643844151161</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1643844151162</updated>
    </task>
    <task id="LOCAL-00003" summary="PROBLEM:&#10;*&#10;1.Write a function that returns the largest element in a list.*&#10;&#10;Inline variable (Inline Temp)&#10;&#10;Reason: There's no reason to use a variable to hold my largestNumber if I can return this value directly to print in my console">
      <created>1643844161740</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1643844161740</updated>
    </task>
    <task id="LOCAL-00004" summary="PROBLEM:&#10;*&#10;2.Write function that reverses a list, preferably in place.&#10;*">
      <created>1643847868236</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1643847868236</updated>
    </task>
    <task id="LOCAL-00005" summary="PROBLEM:&#10;*&#10;.Write a function that checks whether an element occurs in a list.&#10;*&#10;&#10;Reason for println and don't printf use:&#10;How I only need to concatenate one integer on my text, use printf, on my eyes, is not necessary.">
      <created>1643850169550</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1643850169550</updated>
    </task>
    <task id="LOCAL-00006" summary="PROBLEM:&#10;*&#10;4.Write a function that returns the elements on odd positions in a list.*">
      <created>1643854547585</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1643854547585</updated>
    </task>
    <task id="LOCAL-00007" summary="PROBLEM:&#10;*&#10;5.Write a function that computes the running total of a list.&#10;*">
      <created>1643859361900</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1643859361900</updated>
    </task>
    <task id="LOCAL-00008" summary="PROBLEM:&#10;*&#10;6.Write a function that tests whether a string is a palindrome.&#10;*">
      <created>1643862369952</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1643862369971</updated>
    </task>
    <task id="LOCAL-00009" summary="Packages naming refactoring">
      <created>1644311264635</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1644311264635</updated>
    </task>
    <option name="localTasksCounter" value="10" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="PROBLEM:&#10;*&#10;1.Write a function that returns the largest element in a list.*" />
    <MESSAGE value="PROBLEM:&#10;*&#10;1.Write a function that returns the largest element in a list.*&#10;&#10;Extract function on stream code part.&#10;&#10;Reason: For people who don't know about stream, putting it in a function and give a descriptive name can help" />
    <MESSAGE value="PROBLEM:&#10;*&#10;1.Write a function that returns the largest element in a list.*&#10;&#10;Inline variable (Inline Temp)&#10;&#10;Reason: There's no reason to use a variable to hold my largestNumber if I can return this value directly to print in my console" />
    <MESSAGE value="PROBLEM:&#10;*&#10;2.Write function that reverses a list, preferably in place.&#10;*" />
    <MESSAGE value="PROBLEM:&#10;*&#10;.Write a function that checks whether an element occurs in a list.&#10;*&#10;&#10;Reason for println and don't printf use:&#10;How I only need to concatenate one integer on my text, use printf, on my eyes, is not necessary." />
    <MESSAGE value="PROBLEM:&#10;*&#10;4.Write a function that returns the elements on odd positions in a list.*" />
    <MESSAGE value="PROBLEM:&#10;*&#10;5.Write a function that computes the running total of a list.&#10;*" />
    <MESSAGE value="PROBLEM:&#10;*&#10;6.Write a function that tests whether a string is a palindrome.&#10;*" />
    <MESSAGE value="Packages naming refactoring" />
    <option name="LAST_COMMIT_MESSAGE" value="Packages naming refactoring" />
  </component>
</project>